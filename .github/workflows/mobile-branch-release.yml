name: "Manual branch release (photos independent)"
on:
    workflow_dispatch: # Allow manually running the action
env:
    FLUTTER_VERSION: "3.32.8"
    RUST_VERSION: "1.86.0"

permissions:
    contents: write
jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: mobile/apps/photos
        steps:
            - name: Checkout code and submodules
              uses: actions/checkout@v4
              with:
                  submodules: recursive
            
            - name: Setup JDK 17
              uses: actions/setup-java@v1
              with:
                  java-version: 17
            
            - name: Install Flutter ${{ env.FLUTTER_VERSION  }}
              uses: subosito/flutter-action@v2
              with:
                  channel: "stable"
                  flutter-version: ${{ env.FLUTTER_VERSION  }}
                  cache: true
                  
            - name: Install Rust ${{ env.RUST_VERSION }}
              uses: dtolnay/rust-toolchain@master
              with:
                toolchain: ${{ env.RUST_VERSION }}

            - name: Install Flutter Rust Bridge
              run: cargo install flutter_rust_bridge_codegen

            - name: Generate Rust bindings
              run: flutter_rust_bridge_codegen generate
              
            - name: Increment version code for build
              run: |
                  CURRENT_VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
                  VERSION_NAME=$(echo $CURRENT_VERSION | cut -d'+' -f1)
                  CURRENT_BUILD=$(echo $CURRENT_VERSION | cut -d'+' -f2)
                  NEW_BUILD=$((CURRENT_BUILD + ${{ github.run_number }}))
                  NEW_VERSION="${VERSION_NAME}+${NEW_BUILD}"

                  sed -i "s/^version: .*/version: $NEW_VERSION/" pubspec.yaml
                  echo "Building with version ${NEW_VERSION}"

                  # Get branch name and sanitize it for package name
                  BRANCH_NAME="${GITHUB_REF#refs/heads/}"
                  BRANCH_SAFE=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9]/_/g' | tr '[:upper:]' '[:lower:]')
                  echo "Building with branch ${BRANCH_SAFE}"
                  
                  # Store version for later use
                  echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
                  echo "NEW_VERSION_TAG=photos-dev-${BRANCH_SAFE}-v${NEW_VERSION}" >> $GITHUB_ENV
                  echo "Building with tag ${NEW_VERSION_TAG}"
            
            - name: Setup keys
              uses: timheuer/base64-to-file@v1
              with:
                  fileName: "keystore/ente_photos_key.jks"
                  encodedString: ${{ secrets.SIGNING_KEY_PHOTOS }}
            
            - name: Build dev APK
              run: |
                flutter build apk --dart-define=cronetHttpNoPlay=true --release --flavor dev
                mv build/app/outputs/flutter-apk/app-dev-release.apk build/app/outputs/flutter-apk/ente-${{ env.NEW_VERSION_TAG }}.apk
              env:
                  SIGNING_KEY_PATH: "/home/runner/work/_temp/keystore/ente_photos_key.jks"
                  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS_PHOTOS }}
                  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD_PHOTOS }}
                  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD_PHOTOS }}
            
            - name: Checksum
              run: sha256sum build/app/outputs/flutter-apk/ente-${{ env.NEW_VERSION_TAG }}.apk > build/app/outputs/flutter-apk/sha256sum
            
            - name: Create a GitHub release
              uses: ncipollo/release-action@v1
              with:
                  artifacts: "mobile/apps/photos/build/app/outputs/flutter-apk/ente-${{ env.NEW_VERSION_TAG }}.apk,mobile/apps/photos/build/app/outputs/flutter-apk/sha256sum"
                  tag: ${{ env.NEW_VERSION_TAG }}
                  name: "${{ env.NEW_VERSION_TAG }}"
                  draft: false
                  generateReleaseNotes: true
